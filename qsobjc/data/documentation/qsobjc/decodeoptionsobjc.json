{"sections":[],"metadata":{"modules":[{"name":"QsObjC"}],"roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"DecodeOptionsObjC"}],"role":"symbol","symbolKind":"class","externalID":"c:@M@QsObjC@objc(cs)QsDecodeOptions","title":"DecodeOptionsObjC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodeOptionsObjC"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/QsObjC\/objc(cs)NSObject"]},{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/QsObjC\/objc(pl)NSObject","doc:\/\/QsObjC\/s7CVarArgP","doc:\/\/QsObjC\/s28CustomDebugStringConvertibleP","doc:\/\/QsObjC\/s23CustomStringConvertibleP","doc:\/\/QsObjC\/SQ","doc:\/\/QsObjC\/SH","doc:\/\/QsObjC\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/qsobjc\/decodeoptionsobjc"]}],"identifier":{"url":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Objective-C wrapper for "},{"type":"codeVoice","code":"QsSwift.DecodeOptions"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/QsObjC\/documentation\/QsObjC"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":"(QsDecodeOptions) ","kind":"text"},{"text":"@objcMembers","kind":"attribute"},{"text":" ","kind":"text"},{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodeOptionsObjC","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"This class is mutable and designed to be configured from Obj-C or Swift,","type":"text"},{"text":" ","type":"text"},{"text":"then bridged to the Swift core via the internal ","type":"text"},{"code":"swift","type":"codeVoice"},{"text":" computed property.","type":"text"},{"text":" ","type":"text"},{"text":"It mirrors the Swift API closely, including defaults.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Thread-safety: not thread-safe. Configure on one thread, then pass into a call.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Obj-C usage example:"}],"type":"paragraph"},{"type":"codeListing","code":["QsDecodeOptions *opts = [QsDecodeOptions new];","opts.ignoreQueryPrefix = YES;","opts.allowDots = YES;                  \/\/ treat `a.b` as `a[b]`","opts.delimiter = QsDelimiter.ampersand; \/\/ `&` (default)","opts.duplicates = QsDuplicatesCombine; \/\/ combine duplicate keys","NSDictionary *out = [Qs decode:@\"?a=1&a=2\" options:opts error:NULL];"],"syntax":"objc"}]}],"topicSections":[{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/allowDots","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/allowEmptyLists","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/allowSparseLists","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/charset","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/charsetSentinel","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/comma","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/decodeDotInKeys","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/decoderBlock-swift.property","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/delimiter","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/depth","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/duplicates","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/ignoreQueryPrefix","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/interpretNumericEntities","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/legacyDecoderBlock-swift.property","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/listLimit","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/parameterLimit","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/parseLists","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/strictDepth","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/strictNullHandling","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/throwOnLimitExceeded","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/valueDecoderBlock-swift.property"],"anchor":"Instance-Properties"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/with(_:)"],"anchor":"Instance-Methods"},{"title":"Type Aliases","generated":true,"identifiers":["doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/DecoderBlock-swift.typealias","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/LegacyDecoderBlock-swift.typealias","doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/ValueDecoderBlock-swift.typealias"],"anchor":"Type-Aliases"}],"references":{"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/decoderBlock-swift.property":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decoderBlock","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@QsObjC@objc(cs)QsDecodeOptions","text":"DecodeOptionsObjC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:6QsObjC013DecodeOptionsB1CC12DecoderBlocka","text":"DecoderBlock","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"decoderBlock","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/decoderblock-swift.property","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/decoderBlock-swift.property"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/allowSparseLists":{"kind":"symbol","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/allowSparseLists","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/allowsparselists","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allowSparseLists","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","title":"allowSparseLists","abstract":[{"type":"text","text":"Permit sparse arrays (e.g. "},{"type":"codeVoice","code":"a[2]=x"},{"type":"text","text":" without lower indices). When "},{"type":"codeVoice","code":"false"},{"type":"text","text":", gaps are filled."}]},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/interpretNumericEntities":{"kind":"symbol","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/interpretNumericEntities","title":"interpretNumericEntities","abstract":[{"text":"Convert ","type":"text"},{"code":"&#...;","type":"codeVoice"},{"text":" \/ ","type":"text"},{"code":"&name;","type":"codeVoice"},{"text":" numeric entities inside tokens to their Unicode scalars.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interpretNumericEntities","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/qsobjc\/decodeoptionsobjc\/interpretnumericentities","type":"topic"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/with(_:)":{"title":"with(_:)","abstract":[{"text":"Tiny Swift-only helper that lets you configure fluently:","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"DecodeOptionsObjC","preciseIdentifier":"c:@M@QsObjC@objc(cs)QsDecodeOptions"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/with(_:)","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/with(_:)","role":"symbol"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/charsetSentinel":{"abstract":[{"text":"Interpret the ","type":"text"},{"code":"utf8=âœ“","type":"codeVoice"},{"text":" sentinel (if present) per qs conventions.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"charsetSentinel","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/charsetSentinel","title":"charsetSentinel","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/charsetsentinel","role":"symbol","kind":"symbol"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/allowEmptyLists":{"type":"topic","role":"symbol","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/allowEmptyLists","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allowEmptyLists","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"Allow empty lists like ","type":"text"},{"type":"codeVoice","code":"a[]="},{"text":" to produce an empty array rather than omitting the key.","type":"text"}],"title":"allowEmptyLists","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/allowemptylists"},"doc://QsObjC/documentation/QsObjC":{"abstract":[],"url":"\/documentation\/qsobjc","title":"QsObjC","kind":"symbol","type":"topic","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC","role":"collection"},"doc://QsObjC/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/QsObjC\/s28CustomDebugStringConvertibleP","type":"unresolvable"},"doc://QsObjC/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/QsObjC\/objc(pl)NSObject","type":"unresolvable"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/LegacyDecoderBlock-swift.typealias":{"type":"topic","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/legacydecoderblock-swift.typealias","kind":"symbol","role":"symbol","title":"DecodeOptionsObjC.LegacyDecoderBlock","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/LegacyDecoderBlock-swift.typealias","navigatorTitle":[{"kind":"identifier","text":"LegacyDecoderBlock"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"LegacyDecoderBlock"}],"abstract":[{"type":"text","text":"Backâ€‘compat: legacy twoâ€‘argument decoder, mirroring Swift "},{"type":"codeVoice","code":"LegacyDecoder"},{"type":"text","text":" (deprecated)."},{"type":"text","text":" "},{"type":"text","text":"Prefer "},{"type":"codeVoice","code":"decoderBlock"},{"type":"text","text":" (the KEY\/VALUEâ€‘aware 3â€‘argument variant)."},{"type":"text","text":" "},{"type":"text","text":"Returning "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" produces an absent value; the core will not fall back."}]},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/DecoderBlock-swift.typealias":{"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecoderBlock","kind":"identifier"}],"url":"\/documentation\/qsobjc\/decodeoptionsobjc\/decoderblock-swift.typealias","navigatorTitle":[{"text":"DecoderBlock","kind":"identifier"}],"abstract":[{"type":"text","text":"Preferred: KEY\/VALUE-aware scalar decoder."},{"type":"text","text":" "},{"type":"text","text":"Signature: token, charset (String.Encoding.rawValue), kind (0=key, 1=value) -> Any?"}],"type":"topic","role":"symbol","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/DecoderBlock-swift.typealias","title":"DecodeOptionsObjC.DecoderBlock"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/decodeDotInKeys":{"title":"decodeDotInKeys","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/decodedotinkeys","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decodeDotInKeys","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/decodeDotInKeys","abstract":[{"text":"Deprecated spelling mirroring Swift; when ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" dots in keys are parsed as path","type":"text"},{"text":" ","type":"text"},{"text":"separators. Kept for compatibility with other ports. Prefer ","type":"text"},{"type":"codeVoice","code":"allowDots"},{"text":".","type":"text"}],"type":"topic","kind":"symbol"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/charset":{"type":"topic","abstract":[{"text":"Desired input charset. Defaults to UTFâ€‘8.","type":"text"},{"text":" ","type":"text"},{"text":"Bridged to ","type":"text"},{"code":"String.Encoding(rawValue:)","type":"codeVoice"},{"text":" in Swift.","type":"text"}],"url":"\/documentation\/qsobjc\/decodeoptionsobjc\/charset","role":"symbol","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/charset","kind":"symbol","title":"charset","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"charset","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"}]},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/strictNullHandling":{"identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/strictNullHandling","type":"topic","abstract":[{"type":"text","text":"If "},{"code":"true","type":"codeVoice"},{"type":"text","text":", "},{"code":"a","type":"codeVoice"},{"type":"text","text":" without value is "},{"code":"NSNull","type":"codeVoice"},{"type":"text","text":" rather than empty string. Mirrors Swift."}],"url":"\/documentation\/qsobjc\/decodeoptionsobjc\/strictnullhandling","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictNullHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"strictNullHandling","role":"symbol"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/valueDecoderBlock-swift.property":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"valueDecoderBlock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DecodeOptionsObjC","preciseIdentifier":"c:@M@QsObjC@objc(cs)QsDecodeOptions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ValueDecoderBlock","preciseIdentifier":"s:6QsObjC013DecodeOptionsB1CC17ValueDecoderBlocka"},{"kind":"text","text":"?"}],"kind":"symbol","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/valuedecoderblock-swift.property","type":"topic","abstract":[],"title":"valueDecoderBlock","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/valueDecoderBlock-swift.property","role":"symbol"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/throwOnLimitExceeded":{"kind":"symbol","type":"topic","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/throwOnLimitExceeded","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/throwonlimitexceeded","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", exceedance of "},{"type":"codeVoice","code":"listLimit"},{"type":"text","text":", "},{"type":"codeVoice","code":"depth"},{"type":"text","text":", or "},{"type":"codeVoice","code":"parameterLimit"},{"type":"text","text":" throws instead"},{"type":"text","text":" "},{"type":"text","text":"of truncating\/ignoring extra data."}],"role":"symbol","title":"throwOnLimitExceeded","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"throwOnLimitExceeded"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://QsObjC/s7CVarArgP":{"title":"Swift.CVarArg","identifier":"doc:\/\/QsObjC\/s7CVarArgP","type":"unresolvable"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC":{"kind":"symbol","abstract":[{"text":"Objective-C wrapper for ","type":"text"},{"code":"QsSwift.DecodeOptions","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodeOptionsObjC","kind":"identifier"}],"title":"DecodeOptionsObjC","url":"\/documentation\/qsobjc\/decodeoptionsobjc","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC","role":"symbol","type":"topic","navigatorTitle":[{"text":"DecodeOptionsObjC","kind":"identifier"}]},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/allowDots":{"role":"symbol","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/allowdots","abstract":[{"text":"Accept dotted key paths (","type":"text"},{"code":"a.b.c","type":"codeVoice"},{"type":"text","text":") as if they were bracket paths ("},{"type":"codeVoice","code":"a[b][c]"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"This is ORâ€™ed with "},{"type":"codeVoice","code":"decodeDotInKeys"},{"type":"text","text":" so either flag enables dot support."}],"title":"allowDots","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allowDots"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/allowDots","type":"topic"},"doc://QsObjC/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/QsObjC\/s8SendableP","type":"unresolvable"},"doc://QsObjC/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/QsObjC\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/comma":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"comma"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"When "},{"code":"true","type":"codeVoice"},{"type":"text","text":", treat commas as element separators inside a single key (e.g. "},{"code":"a=b,c","type":"codeVoice"},{"type":"text","text":")."}],"identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/comma","title":"comma","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/comma"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/legacyDecoderBlock-swift.property":{"abstract":[],"title":"legacyDecoderBlock","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/legacyDecoderBlock-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/legacydecoderblock-swift.property","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"legacyDecoderBlock"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DecodeOptionsObjC","preciseIdentifier":"c:@M@QsObjC@objc(cs)QsDecodeOptions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"LegacyDecoderBlock","preciseIdentifier":"s:6QsObjC013DecodeOptionsB1CC18LegacyDecoderBlocka"},{"kind":"text","text":"?"}]},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/strictDepth":{"title":"strictDepth","kind":"symbol","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/strictdepth","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/strictDepth","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictDepth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", enforce the exact nesting depth limit below; otherwise the core"},{"type":"text","text":" "},{"type":"text","text":"may bestâ€‘effort parse past the limit for compatibility."}]},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/listLimit":{"type":"topic","abstract":[{"type":"text","text":"Maximum number of items parsed into a single list (defensive cap)."}],"identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/listLimit","title":"listLimit","kind":"symbol","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/listlimit","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"listLimit"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}]},"doc://QsObjC/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/QsObjC\/SQ","type":"unresolvable"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/parameterLimit":{"role":"symbol","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/parameterlimit","title":"parameterLimit","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parameterLimit","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/parameterLimit","abstract":[{"type":"text","text":"Hard cap on the number of key\/value pairs processed from the input."}]},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/parseLists":{"kind":"symbol","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/parseLists","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/parselists","title":"parseLists","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parseLists","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Whether to parse bracketed array syntax at all (e.g. "},{"type":"codeVoice","code":"a[0]=x"},{"type":"text","text":"). When "},{"type":"codeVoice","code":"false"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"everything is treated as scalars \/ objects."}]},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/depth":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"depth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"abstract":[{"type":"text","text":"Hard cap on nested bracket depth."}],"url":"\/documentation\/qsobjc\/decodeoptionsobjc\/depth","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/depth","title":"depth"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/ValueDecoderBlock-swift.typealias":{"url":"\/documentation\/qsobjc\/decodeoptionsobjc\/valuedecoderblock-swift.typealias","kind":"symbol","role":"symbol","title":"DecodeOptionsObjC.ValueDecoderBlock","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/ValueDecoderBlock-swift.typealias","abstract":[{"text":"If set, called to decode a single percent-encoded scalar ","type":"text"},{"inlineContent":[{"text":"before","type":"text"}],"type":"strong"},{"text":" itâ€™s interpreted","type":"text"},{"text":" ","type":"text"},{"text":"by the core. Return the decoded value (e.g. ","type":"text"},{"type":"codeVoice","code":"NSString"},{"text":", ","type":"text"},{"type":"codeVoice","code":"NSNumber"},{"text":", ","type":"text"},{"type":"codeVoice","code":"NSNull"},{"text":", etc.),","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" to produce an absent value. The core will honor ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" (no fallback).","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ValueDecoderBlock"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ValueDecoderBlock"}],"type":"topic"},"doc://QsObjC/SH":{"identifier":"doc:\/\/QsObjC\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/delimiter":{"type":"topic","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/delimiter","abstract":[{"text":"Pair delimiter for query tokens (e.g. ","type":"text"},{"code":"&","type":"codeVoice"},{"text":" or ","type":"text"},{"code":";","type":"codeVoice"},{"text":").","type":"text"},{"text":" ","type":"text"},{"text":"Objâ€‘C: this is a reference type wrapper so it bridges cleanly.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"delimiter"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@QsObjC@objc(cs)QsDelimiter","kind":"typeIdentifier","text":"DelimiterObjC"}],"identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/delimiter","title":"delimiter"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/ignoreQueryPrefix":{"url":"\/documentation\/qsobjc\/decodeoptionsobjc\/ignorequeryprefix","kind":"symbol","type":"topic","abstract":[{"text":"Ignore a leading ","type":"text"},{"type":"codeVoice","code":"?"},{"text":" in the source string (useful when decoding full URLs or query parts).","type":"text"}],"title":"ignoreQueryPrefix","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/ignoreQueryPrefix","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ignoreQueryPrefix","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"role":"symbol"},"doc://QsObjC/objc(cs)NSObject":{"title":"ObjectiveC.NSObject","type":"unresolvable","identifier":"doc:\/\/QsObjC\/objc(cs)NSObject"},"doc://QsObjC/documentation/QsObjC/DecodeOptionsObjC/duplicates":{"type":"topic","identifier":"doc:\/\/QsObjC\/documentation\/QsObjC\/DecodeOptionsObjC\/duplicates","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"duplicates","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DuplicatesObjC","kind":"typeIdentifier","preciseIdentifier":"c:@M@QsObjC@E@QsDuplicates"}],"title":"duplicates","url":"\/documentation\/qsobjc\/decodeoptionsobjc\/duplicates","role":"symbol","abstract":[{"type":"text","text":"How to handle duplicate keys (e.g. "},{"type":"codeVoice","code":"a=1&a=2"},{"type":"text","text":") â€” combine vs. lastâ€‘writeâ€‘wins."}]}}}