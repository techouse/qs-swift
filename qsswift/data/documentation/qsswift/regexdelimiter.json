{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/qsswift\/regexdelimiter"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/Delimiter","doc:\/\/QsSwift\/SQ","doc:\/\/QsSwift\/s8SendableP"],"type":"conformsTo"}],"topicSections":[{"title":"Operators","identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/==(_:_:)"],"generated":true,"anchor":"Operators"},{"title":"Initializers","identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/init(_:)"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/pattern"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/split(input:)"],"generated":true,"anchor":"Instance-Methods"},{"title":"Type Properties","identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/commaOrSemicolon","doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/semicolonWithWhitespace"],"generated":true,"anchor":"Type-Properties"},{"title":"Default Implementations","identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/Equatable-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"RegexDelimiter"}],"role":"symbol","symbolKind":"struct","externalID":"s:7QsSwift14RegexDelimiterV","modules":[{"name":"QsSwift"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexDelimiter"}],"title":"RegexDelimiter","roleHeading":"Structure"},"hierarchy":{"paths":[["doc:\/\/QsSwift\/documentation\/QsSwift"]]},"identifier":{"url":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter","interfaceLanguage":"swift"},"abstract":[{"text":"A delimiter that splits on a regular expression pattern (e.g. ","type":"text"},{"type":"codeVoice","code":"\\\\s*[,;]\\\\s*"},{"text":").","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegexDelimiter"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this when you need whitespace-tolerant or multi-character separators."},{"type":"text","text":" "},{"type":"text","text":"Compiles the regex once and reuses it."}]},{"items":[{"content":[{"inlineContent":[{"text":"Performance: Regex splitting is slower than a literal delimiter; only use it when needed.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Thread-safety: ","type":"text"},{"code":"NSRegularExpression","type":"codeVoice"},{"text":" is thread-safe on Apple platforms, but not ","type":"text"},{"code":"Sendable","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"We therefore mark this type ","type":"text"},{"code":"@unchecked Sendable","type":"codeVoice"},{"text":".","type":"text"}]}]}],"type":"unorderedList"}]}],"references":{"doc://QsSwift/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/QsSwift\/s8SendableP"},"doc://QsSwift/documentation/QsSwift/RegexDelimiter/==(_:_:)":{"kind":"symbol","type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/==(_:_:)","title":"==(_:_:)","url":"\/documentation\/qsswift\/regexdelimiter\/==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7QsSwift14RegexDelimiterV","text":"RegexDelimiter","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7QsSwift14RegexDelimiterV","text":"RegexDelimiter","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://QsSwift/documentation/QsSwift/RegexDelimiter/pattern":{"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/pattern","url":"\/documentation\/qsswift\/regexdelimiter\/pattern","role":"symbol","title":"pattern","abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pattern","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic","kind":"symbol"},"doc://QsSwift/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/QsSwift\/SQ"},"doc://QsSwift/documentation/QsSwift/Delimiter":{"type":"topic","kind":"symbol","abstract":[{"text":"Splits a query string into keyâ€“value pairs using a chosen strategy.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Delimiter","kind":"identifier"}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/Delimiter","title":"Delimiter","role":"symbol","navigatorTitle":[{"text":"Delimiter","kind":"identifier"}],"url":"\/documentation\/qsswift\/delimiter"},"doc://QsSwift/documentation/QsSwift/RegexDelimiter/init(_:)":{"abstract":[{"type":"text","text":"Compiles the pattern. Throws if the pattern is invalid."}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/init(_:)","role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","title":"init(_:)","url":"\/documentation\/qsswift\/regexdelimiter\/init(_:)"},"doc://QsSwift/documentation/QsSwift/RegexDelimiter/split(input:)":{"title":"split(input:)","url":"\/documentation\/qsswift\/regexdelimiter\/split(input:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"split"},{"kind":"text","text":"("},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Split using the compiled regex, converting "},{"type":"codeVoice","code":"NSRange"},{"type":"text","text":" (UTF-16) to "},{"type":"codeVoice","code":"String.Index"},{"type":"text","text":" safely."}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/split(input:)","role":"symbol"},"doc://QsSwift/documentation/QsSwift/RegexDelimiter/commaOrSemicolon":{"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/commaOrSemicolon","title":"commaOrSemicolon","url":"\/documentation\/qsswift\/regexdelimiter\/commaorsemicolon","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Splits on ","type":"text"},{"type":"codeVoice","code":","},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"or"}]},{"text":" ","type":"text"},{"type":"codeVoice","code":";"},{"text":", each with optional surrounding whitespace.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"commaOrSemicolon","kind":"identifier"},{"text":": ","kind":"text"},{"text":"RegexDelimiter","kind":"typeIdentifier","preciseIdentifier":"s:7QsSwift14RegexDelimiterV"}]},"doc://QsSwift/documentation/QsSwift/RegexDelimiter/semicolonWithWhitespace":{"title":"semicolonWithWhitespace","url":"\/documentation\/qsswift\/regexdelimiter\/semicolonwithwhitespace","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"semicolonWithWhitespace"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7QsSwift14RegexDelimiterV","text":"RegexDelimiter"}],"kind":"symbol","type":"topic","abstract":[{"text":"Splits on ","type":"text"},{"type":"codeVoice","code":";"},{"type":"text","text":" with optional surrounding whitespace."}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/semicolonWithWhitespace","role":"symbol"},"doc://QsSwift/documentation/QsSwift":{"type":"topic","url":"\/documentation\/qsswift","abstract":[],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift","kind":"symbol","title":"QsSwift","role":"collection"},"doc://QsSwift/documentation/QsSwift/RegexDelimiter":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegexDelimiter","kind":"identifier"}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter","role":"symbol","navigatorTitle":[{"text":"RegexDelimiter","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A delimiter that splits on a regular expression pattern (e.g. "},{"code":"\\\\s*[,;]\\\\s*","type":"codeVoice"},{"type":"text","text":")."}],"kind":"symbol","url":"\/documentation\/qsswift\/regexdelimiter","title":"RegexDelimiter"},"doc://QsSwift/documentation/QsSwift/RegexDelimiter/Equatable-Implementations":{"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/RegexDelimiter\/Equatable-Implementations","type":"topic","kind":"article","title":"Equatable Implementations","url":"\/documentation\/qsswift\/regexdelimiter\/equatable-implementations","abstract":[],"role":"collectionGroup"}}}