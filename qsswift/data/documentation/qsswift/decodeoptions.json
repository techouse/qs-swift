{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Options that configure how query strings are ","type":"text"},{"inlineContent":[{"text":"decoded","type":"text"}],"type":"emphasis"},{"text":" into a ","type":"text"},{"code":"[String: Any]","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/QsSwift\/documentation\/QsSwift"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodeOptions","kind":"identifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"This mirrors the behavior of popular ","type":"text"},{"type":"codeVoice","code":"qs"},{"text":" libraries while fitting Swift’s type system.","type":"text"}],"type":"paragraph"},{"anchor":"Highlights","level":3,"type":"heading","text":"Highlights"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Depth control:"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"depth"},{"type":"text","text":" limits how many "},{"type":"codeVoice","code":"[]"},{"type":"text","text":" segments become nested dictionaries."},{"type":"text","text":" "},{"type":"text","text":"With "},{"type":"codeVoice","code":"strictDepth = false"},{"type":"text","text":" (default), extra segments collapse into a single literal"},{"type":"text","text":" "},{"type":"text","text":"path (safe, non-throwing). With "},{"code":"strictDepth = true","type":"codeVoice"},{"type":"text","text":", overshoot "},{"inlineContent":[{"text":"throws","type":"text"}],"type":"emphasis"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"List behavior:"}]},{"type":"text","text":" Tune list parsing with "},{"type":"codeVoice","code":"parseLists"},{"type":"text","text":", "},{"type":"codeVoice","code":"listLimit"},{"type":"text","text":", "},{"type":"codeVoice","code":"allowEmptyLists"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and "},{"type":"codeVoice","code":"allowSparseLists"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Charset:","type":"text"}]},{"type":"text","text":" Use "},{"type":"codeVoice","code":".utf8"},{"type":"text","text":" or "},{"type":"codeVoice","code":".isoLatin1"},{"type":"text","text":". When "},{"type":"codeVoice","code":"charsetSentinel = true"},{"type":"text","text":", a leading"},{"type":"text","text":" "},{"type":"codeVoice","code":"utf8=✓"},{"type":"text","text":" or its numeric-entity variant flips the charset automatically."}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Limits:","type":"text"}],"type":"strong"},{"text":" ","type":"text"},{"code":"parameterLimit","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"listLimit","type":"codeVoice"},{"text":" guard against pathological inputs.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Duplicates:"}]},{"text":" Choose how duplicate keys merge via ","type":"text"},{"type":"codeVoice","code":"duplicates"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Safety--Performance-Notes","level":3,"type":"heading","text":"Safety & Performance Notes"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keep "},{"code":"depth","type":"codeVoice"},{"type":"text","text":" small for untrusted input. Extremely deep chains create large nested"},{"type":"text","text":" "},{"type":"text","text":"structures; on some Swift runtimes, ARC teardown of ultra-deep maps is best done on"},{"type":"text","text":" "},{"type":"text","text":"the main actor (the decoder handles that internally for very deep shapes)."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"parameterLimit"},{"type":"text","text":" must be positive; "},{"type":"codeVoice","code":"depth"},{"type":"text","text":" must be ≥ 0."}],"type":"paragraph"}]}]},{"anchor":"Examples","level":3,"type":"heading","text":"Examples"},{"syntax":"swift","type":"codeListing","code":["\/\/ Basic:","let m = try Qs.decode(\"a[b]=c\")","\/\/ [\"a\": [\"b\": \"c\"]]","","\/\/ Dot notation:","let m2 = try Qs.decode(\"a.b=c\", options: .init(allowDots: true))","\/\/ [\"a\": [\"b\": \"c\"]]"]}]}],"metadata":{"externalID":"s:7QsSwift13DecodeOptionsV","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"DecodeOptions"}],"title":"DecodeOptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodeOptions","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"QsSwift"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/qsswift\/decodeoptions"]}],"topicSections":[{"title":"Initializers","anchor":"Initializers","generated":true,"identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/init(allowDots:decoder:legacyDecoder:decodeDotInKeys:allowEmptyLists:allowSparseLists:listLimit:charset:charsetSentinel:comma:delimiter:depth:parameterLimit:duplicates:ignoreQueryPrefix:interpretNumericEntities:parseLists:strictDepth:strictNullHandling:throwOnLimitExceeded:)"]},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/allowEmptyLists","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/allowSparseLists","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/charset","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/charsetSentinel","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/comma","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/delimiter","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/depth","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/duplicates","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/getAllowDots","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/getDecodeDotInKeys","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/ignoreQueryPrefix","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/interpretNumericEntities","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/listLimit","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/parameterLimit","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/parseLists","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/strictDepth","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/strictNullHandling","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/throwOnLimitExceeded"]},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/copy(allowDots:decoder:legacyDecoder:decodeDotInKeys:allowEmptyLists:allowSparseLists:listLimit:charset:charsetSentinel:comma:delimiter:depth:parameterLimit:duplicates:ignoreQueryPrefix:interpretNumericEntities:parseLists:strictDepth:strictNullHandling:throwOnLimitExceeded:)","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/decodeKey(_:charset:)","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/decodeValue(_:charset:)","doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/getDecoder(_:charset:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions"},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/QsSwift\/s8SendableP"]}],"references":{"doc://QsSwift/documentation/QsSwift/DecodeOptions/allowSparseLists":{"type":"topic","kind":"symbol","title":"allowSparseLists","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allowSparseLists","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/qsswift\/decodeoptions\/allowsparselists","abstract":[{"type":"text","text":"Allow sparse lists (holes); missing indices are represented as "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"When compacted, holes may be removed unless "},{"type":"codeVoice","code":"allowSparseLists"},{"type":"text","text":" is true."}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/allowSparseLists"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/charset":{"title":"charset","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/charset","type":"topic","abstract":[{"text":"Character encoding to use (","type":"text"},{"code":".utf8","type":"codeVoice"},{"text":" or ","type":"text"},{"code":".isoLatin1","type":"codeVoice"},{"text":"). May be overridden by the charset sentinel.","type":"text"}],"url":"\/documentation\/qsswift\/decodeoptions\/charset","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"charset","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":".","kind":"text"},{"text":"Encoding","kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV"}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/init(allowDots:decoder:legacyDecoder:decodeDotInKeys:allowEmptyLists:allowSparseLists:listLimit:charset:charsetSentinel:comma:delimiter:depth:parameterLimit:duplicates:ignoreQueryPrefix:interpretNumericEntities:parseLists:strictDepth:strictNullHandling:throwOnLimitExceeded:)":{"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"DecodeOptions"},{"type":"text","text":" value."}],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"allowDots"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7QsSwift13ScalarDecodera","text":"ScalarDecoder"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"legacyDecoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7QsSwift13LegacyDecodera","text":"LegacyDecoder"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"decodeDotInKeys"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"allowEmptyLists"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"allowSparseLists"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"listLimit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"charset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","text":"Encoding"},{"kind":"text","text":", "},{"kind":"externalParam","text":"charsetSentinel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"comma"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delimiter"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7QsSwift9DelimiterP","text":"Delimiter"},{"kind":"text","text":", "},{"kind":"externalParam","text":"depth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parameterLimit"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"duplicates"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7QsSwift10DuplicatesO","text":"Duplicates"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ignoreQueryPrefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"interpretNumericEntities"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parseLists"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strictDepth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"strictNullHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"throwOnLimitExceeded"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/init(allowDots:decoder:legacyDecoder:decodeDotInKeys:allowEmptyLists:allowSparseLists:listLimit:charset:charsetSentinel:comma:delimiter:depth:parameterLimit:duplicates:ignoreQueryPrefix:interpretNumericEntities:parseLists:strictDepth:strictNullHandling:throwOnLimitExceeded:)","kind":"symbol","title":"init(allowDots:decoder:legacyDecoder:decodeDotInKeys:allowEmptyLists:allowSparseLists:listLimit:charset:charsetSentinel:comma:delimiter:depth:parameterLimit:duplicates:ignoreQueryPrefix:interpretNumericEntities:parseLists:strictDepth:strictNullHandling:throwOnLimitExceeded:)","type":"topic","url":"\/documentation\/qsswift\/decodeoptions\/init(allowdots:decoder:legacydecoder:decodedotinkeys:allowemptylists:allowsparselists:listlimit:charset:charsetsentinel:comma:delimiter:depth:parameterlimit:duplicates:ignorequeryprefix:interpretnumericentities:parselists:strictdepth:strict-2eaj5"},"doc://QsSwift/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/QsSwift\/s8SendableP"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/comma":{"url":"\/documentation\/qsswift\/decodeoptions\/comma","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"comma"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/comma","abstract":[{"type":"text","text":"Treat commas as list separators in scalar positions (e.g., "},{"code":"a=b,c","type":"codeVoice"},{"type":"text","text":" ⇒ "},{"code":"[\"a\": [\"b\",\"c\"]]","type":"codeVoice"},{"type":"text","text":")."}],"title":"comma","role":"symbol","kind":"symbol"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/getDecoder(_:charset:)":{"title":"getDecoder(_:charset:)","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/getDecoder(_:charset:)","kind":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Convenience back‑compat entry point (treat as VALUE decoding)."},{"type":"text","text":" "},{"type":"text","text":"Prefer "},{"type":"codeVoice","code":"decodeValue(_:charset:)"},{"type":"text","text":" in new code. Custom decoders still receive "},{"type":"codeVoice","code":"kind = .value"},{"type":"text","text":"."}],"url":"\/documentation\/qsswift\/decodeoptions\/getdecoder(_:charset:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDecoder"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"charset"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/throwOnLimitExceeded":{"title":"throwOnLimitExceeded","role":"symbol","type":"topic","abstract":[{"type":"text","text":"If "},{"code":"true","type":"codeVoice"},{"type":"text","text":", exceeding "},{"code":"parameterLimit","type":"codeVoice"},{"type":"text","text":" throws; otherwise parsing truncates silently."}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/throwOnLimitExceeded","url":"\/documentation\/qsswift\/decodeoptions\/throwonlimitexceeded","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throwOnLimitExceeded","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/strictDepth":{"kind":"symbol","type":"topic","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/strictDepth","role":"symbol","abstract":[{"type":"text","text":"If "},{"type":"codeVoice","code":"true"},{"type":"text","text":", exceeding "},{"type":"codeVoice","code":"depth"},{"type":"text","text":" throws instead of collapsing the remainder."}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictDepth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"strictDepth","url":"\/documentation\/qsswift\/decodeoptions\/strictdepth"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/interpretNumericEntities":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interpretNumericEntities","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Interpret HTML numeric entities ("},{"type":"codeVoice","code":"&#...;"},{"type":"text","text":") when "},{"type":"codeVoice","code":"charset == .isoLatin1"},{"type":"text","text":"."}],"url":"\/documentation\/qsswift\/decodeoptions\/interpretnumericentities","kind":"symbol","role":"symbol","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/interpretNumericEntities","title":"interpretNumericEntities","type":"topic"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/getDecodeDotInKeys":{"title":"getDecodeDotInKeys","abstract":[{"type":"text","text":"Effective "},{"type":"codeVoice","code":"decodeDotInKeys"},{"type":"text","text":" value (defaults to "},{"type":"codeVoice","code":"false"},{"type":"text","text":"). See the property docs for behavior details."}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/getDecodeDotInKeys","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getDecodeDotInKeys","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/qsswift\/decodeoptions\/getdecodedotinkeys","kind":"symbol"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/delimiter":{"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/delimiter","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"delimiter"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Delimiter","preciseIdentifier":"s:7QsSwift9DelimiterP"}],"title":"delimiter","role":"symbol","abstract":[{"text":"Delimiter used to split top-level pairs (default ","type":"text"},{"type":"codeVoice","code":"&"},{"text":"). Can be ","type":"text"},{"type":"codeVoice","code":"StringDelimiter"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"RegexDelimiter"},{"text":".","type":"text"}],"url":"\/documentation\/qsswift\/decodeoptions\/delimiter"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/depth":{"title":"depth","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"depth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"type":"topic","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/depth","url":"\/documentation\/qsswift\/decodeoptions\/depth","kind":"symbol","abstract":[{"type":"text","text":"Maximum nesting depth for bracketed keys (e.g. "},{"type":"codeVoice","code":"\"a[b][c]\""},{"type":"text","text":")."}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/decodeValue(_:charset:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Decode a value token (scalar). Custom decoders receive "},{"type":"codeVoice","code":"kind = .value"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeValue"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"charset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:SS10FoundationE8EncodingV","text":"Encoding"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/decodeValue(_:charset:)","url":"\/documentation\/qsswift\/decodeoptions\/decodevalue(_:charset:)","title":"decodeValue(_:charset:)"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/parseLists":{"abstract":[{"text":"Disable list parsing entirely. Useful for strict “map only” modes.","type":"text"}],"role":"symbol","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/parseLists","url":"\/documentation\/qsswift\/decodeoptions\/parselists","title":"parseLists","kind":"symbol","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parseLists","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/ignoreQueryPrefix":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreQueryPrefix"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"ignoreQueryPrefix","abstract":[{"type":"text","text":"Ignore a leading "},{"code":"?","type":"codeVoice"},{"type":"text","text":" (common when passing "},{"code":"URL.query","type":"codeVoice"},{"type":"text","text":" directly)."}],"url":"\/documentation\/qsswift\/decodeoptions\/ignorequeryprefix","role":"symbol","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/ignoreQueryPrefix"},"doc://QsSwift/documentation/QsSwift":{"type":"topic","url":"\/documentation\/qsswift","abstract":[],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift","kind":"symbol","title":"QsSwift","role":"collection"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/listLimit":{"type":"topic","abstract":[{"text":"Maximum ","type":"text"},{"inlineContent":[{"type":"text","text":"index"}],"type":"emphasis"},{"text":" that will be materialized as a list element before falling back","type":"text"},{"text":" ","type":"text"},{"text":"to a dictionary. For example, with the default ","type":"text"},{"code":"20","type":"codeVoice"},{"text":", ","type":"text"},{"code":"a[21]=x","type":"codeVoice"},{"text":" decodes as","type":"text"},{"text":" ","type":"text"},{"code":"[\"a\": [\"21\": \"x\"]]","type":"codeVoice"},{"text":" instead of allocating a 22-element list.","type":"text"}],"kind":"symbol","url":"\/documentation\/qsswift\/decodeoptions\/listlimit","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/listLimit","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"listLimit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"listLimit"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/copy(allowDots:decoder:legacyDecoder:decodeDotInKeys:allowEmptyLists:allowSparseLists:listLimit:charset:charsetSentinel:comma:delimiter:depth:parameterLimit:duplicates:ignoreQueryPrefix:interpretNumericEntities:parseLists:strictDepth:strictNullHandling:throwOnLimitExceeded:)":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a copy of these options with any provided overrides."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"copy","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allowDots","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7QsSwift13ScalarDecodera","text":"ScalarDecoder","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"legacyDecoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7QsSwift13LegacyDecodera","text":"LegacyDecoder","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"decodeDotInKeys","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"allowEmptyLists","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"allowSparseLists","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"listLimit","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"charset","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","text":"Encoding","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"charsetSentinel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"comma","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"delimiter","kind":"externalParam"},{"text":": (any ","kind":"text"},{"preciseIdentifier":"s:7QsSwift9DelimiterP","text":"Delimiter","kind":"typeIdentifier"},{"text":")?, ","kind":"text"},{"text":"depth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"parameterLimit","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"duplicates","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7QsSwift10DuplicatesO","text":"Duplicates","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"ignoreQueryPrefix","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"interpretNumericEntities","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"parseLists","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"strictDepth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"strictNullHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"throwOnLimitExceeded","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:7QsSwift13DecodeOptionsV","text":"DecodeOptions","kind":"typeIdentifier"}],"url":"\/documentation\/qsswift\/decodeoptions\/copy(allowdots:decoder:legacydecoder:decodedotinkeys:allowemptylists:allowsparselists:listlimit:charset:charsetsentinel:comma:delimiter:depth:parameterlimit:duplicates:ignorequeryprefix:interpretnumericentities:parselists:strictdepth:strict-6raum","role":"symbol","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/copy(allowDots:decoder:legacyDecoder:decodeDotInKeys:allowEmptyLists:allowSparseLists:listLimit:charset:charsetSentinel:comma:delimiter:depth:parameterLimit:duplicates:ignoreQueryPrefix:interpretNumericEntities:parseLists:strictDepth:strictNullHandling:throwOnLimitExceeded:)","title":"copy(allowDots:decoder:legacyDecoder:decodeDotInKeys:allowEmptyLists:allowSparseLists:listLimit:charset:charsetSentinel:comma:delimiter:depth:parameterLimit:duplicates:ignoreQueryPrefix:interpretNumericEntities:parseLists:strictDepth:strictNullHandling:throwOnLimitExceeded:)","type":"topic"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/duplicates":{"url":"\/documentation\/qsswift\/decodeoptions\/duplicates","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/duplicates","abstract":[{"text":"How to merge duplicate keys at the same level (","type":"text"},{"type":"codeVoice","code":".combine"},{"text":", ","type":"text"},{"type":"codeVoice","code":".first"},{"text":", ","type":"text"},{"type":"codeVoice","code":".last"},{"text":").","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"duplicates","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Duplicates","preciseIdentifier":"s:7QsSwift10DuplicatesO","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"duplicates"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/charsetSentinel":{"url":"\/documentation\/qsswift\/decodeoptions\/charsetsentinel","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"charsetSentinel","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/charsetSentinel","type":"topic","kind":"symbol","title":"charsetSentinel","abstract":[{"text":"Enable detection of ","type":"text"},{"code":"utf8=✓","type":"codeVoice"},{"text":" (or its numeric-entity form) to override ","type":"text"},{"code":"charset","type":"codeVoice"},{"text":".","type":"text"}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/getAllowDots":{"type":"topic","title":"getAllowDots","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/getAllowDots","kind":"symbol","abstract":[{"type":"text","text":"Effective dot‑notation flag: "},{"code":"true","type":"codeVoice"},{"type":"text","text":" when "},{"code":"allowDots == true","type":"codeVoice"},{"type":"text","text":" "},{"inlineContent":[{"type":"text","text":"or"}],"type":"strong"},{"type":"text","text":" when "},{"code":"decodeDotInKeys == true","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This matches other ports where requesting encoded‑dot handling implicitly enables dot paths."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getAllowDots","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/qsswift\/decodeoptions\/getallowdots"},"doc://QsSwift/documentation/QsSwift/DecodeOptions":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DecodeOptions","kind":"identifier"}],"url":"\/documentation\/qsswift\/decodeoptions","type":"topic","abstract":[{"text":"Options that configure how query strings are ","type":"text"},{"inlineContent":[{"type":"text","text":"decoded"}],"type":"emphasis"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"[String: Any]"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","title":"DecodeOptions","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions","navigatorTitle":[{"text":"DecodeOptions","kind":"identifier"}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/allowEmptyLists":{"url":"\/documentation\/qsswift\/decodeoptions\/allowemptylists","kind":"symbol","title":"allowEmptyLists","role":"symbol","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/allowEmptyLists","abstract":[{"text":"Allow empty lists in the input to become ","type":"text"},{"code":"[]","type":"codeVoice"},{"text":" in the result (instead of omitting the key).","type":"text"}],"type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allowEmptyLists","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/decodeKey(_:charset:)":{"kind":"symbol","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/decodeKey(_:charset:)","abstract":[{"text":"Decode a key (or key segment). Always coerces the result to ","type":"text"},{"code":"String?","type":"codeVoice"},{"text":" (mirrors Kotlin’s ","type":"text"},{"code":"toString()","type":"codeVoice"},{"text":").","type":"text"},{"text":" ","type":"text"},{"text":"Custom decoders receive ","type":"text"},{"code":"kind = .key","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","type":"topic","title":"decodeKey(_:charset:)","url":"\/documentation\/qsswift\/decodeoptions\/decodekey(_:charset:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decodeKey"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"charset"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"."},{"preciseIdentifier":"s:SS10FoundationE8EncodingV","kind":"typeIdentifier","text":"Encoding"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?"}]},"doc://QsSwift/documentation/QsSwift/DecodeOptions/parameterLimit":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/parameterLimit","abstract":[{"text":"Maximum number of top-level parameters to parse. Must be positive.","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parameterLimit","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"url":"\/documentation\/qsswift\/decodeoptions\/parameterlimit","title":"parameterLimit"},"doc://QsSwift/documentation/QsSwift/DecodeOptions/strictNullHandling":{"type":"topic","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/DecodeOptions\/strictNullHandling","title":"strictNullHandling","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictNullHandling"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","url":"\/documentation\/qsswift\/decodeoptions\/strictnullhandling","abstract":[{"text":"If ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", values without ","type":"text"},{"code":"=","type":"codeVoice"},{"text":" decode to ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" (vs ","type":"text"},{"code":"\"\"","type":"codeVoice"},{"text":" by default).","type":"text"}]}}}