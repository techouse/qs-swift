{"identifier":{"url":"doc:\/\/QsSwift\/documentation\/QsSwift\/Qs\/encode(_:options:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Encode a Dictionary- or Array-like value into a query string.","type":"text"}],"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Type Method","externalID":"s:7QsSwift0A0O6encode_7optionsSSypSg_AA13EncodeOptionsVtKFZ","modules":[{"name":"QsSwift"}],"title":"encode(_:options:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7QsSwift13EncodeOptionsV","text":"EncodeOptions"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"extendedModule":"QsSwift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/QsSwift\/documentation\/QsSwift","doc:\/\/QsSwift\/documentation\/QsSwift\/Qs"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/EncodeOptions","kind":"typeIdentifier","text":"EncodeOptions","preciseIdentifier":"s:7QsSwift13EncodeOptionsV"},{"kind":"text","text":" = EncodeOptions()) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]}],"kind":"declarations"},{"parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to encode. "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" yields "},{"code":"\"\"","type":"codeVoice"},{"type":"text","text":"."}]}]},{"name":"options","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Encoder settings. See "},{"type":"codeVoice","code":"EncodeOptions"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The encoded query string (no leading "},{"type":"codeVoice","code":"?"},{"type":"text","text":" unless "},{"type":"codeVoice","code":"addQueryPrefix"},{"type":"text","text":" is set)."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Accepts:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"[String: Any]","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"OrderedDictionary<String, Any>","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"[Any]"},{"type":"text","text":" (becomes "},{"type":"codeVoice","code":"[\"0\": v0, \"1\": v1, ...]"},{"type":"text","text":")"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Behavior highlights:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Nulls \/ undefined"}]},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"When ","type":"text"},{"code":"skipNulls == true","type":"codeVoice"},{"text":", both missing and ","type":"text"},{"code":"NSNull()","type":"codeVoice"},{"text":" entries are skipped.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Otherwise, absent values are treated as "},{"type":"codeVoice","code":"\"\""},{"type":"text","text":" if "},{"type":"codeVoice","code":"strictNullHandling == false"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and as "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" (no "},{"type":"codeVoice","code":"="},{"type":"text","text":") if "},{"type":"codeVoice","code":"strictNullHandling == true"},{"type":"text","text":"."}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Dates","type":"text"}]},{"type":"text","text":" use "},{"code":"options.getDateSerializer","type":"codeVoice"},{"type":"text","text":" (ISO 8601 by default)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Lists","type":"text"}],"type":"strong"},{"text":" follow ","type":"text"},{"type":"codeVoice","code":"listFormat"},{"text":" (","type":"text"},{"type":"codeVoice","code":".indices"},{"text":", ","type":"text"},{"type":"codeVoice","code":".brackets"},{"text":", ","type":"text"},{"type":"codeVoice","code":".repeatKey"},{"text":", ","type":"text"},{"type":"codeVoice","code":".comma"},{"text":"),","type":"text"},{"text":" ","type":"text"},{"text":"with optional ","type":"text"},{"type":"codeVoice","code":"commaRoundTrip"},{"text":" behavior for single-item comma lists.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Dots"}],"type":"strong"},{"text":" in keys can be left as-is, allowed as path separators (","type":"text"},{"code":"allowDots","type":"codeVoice"},{"text":"),","type":"text"},{"text":" ","type":"text"},{"text":"or percent-encoded with ","type":"text"},{"code":"encodeDotInKeys","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Charset sentinel"}],"type":"strong"},{"type":"text","text":" (Rails-style "},{"type":"codeVoice","code":"utf8=✓"},{"type":"text","text":") is optionally prefixed."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Ordering rules:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"options.sort != nil"},{"type":"text","text":", that sorter decides order everywhere."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"options.sort == nil"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"options.encode == false"},{"type":"text","text":", key order follows the input"},{"type":"text","text":" "},{"type":"text","text":"container’s traversal order (e.g., "},{"type":"codeVoice","code":"OrderedDictionary"},{"type":"text","text":" preserves insertion order)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"options.sort == nil","type":"codeVoice"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"and"}]},{"text":" ","type":"text"},{"code":"options.encode == true","type":"codeVoice"},{"text":", a deterministic default is applied","type":"text"},{"text":" ","type":"text"},{"text":"at the top level: non-empty keys sorted A→Z with empty keys (","type":"text"},{"code":"\"\"","type":"codeVoice"},{"text":") moved to the end.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Arrays preserve input order in all list formats.","type":"text"}]}]}],"type":"unorderedList"},{"style":"note","content":[{"inlineContent":[{"type":"text","text":"If a cycle is detected in the object graph (e.g. a collection that refers to itself)."}],"type":"paragraph"}],"name":"Throws","type":"aside"},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For fully deterministic output across platforms, either pass an explicit "},{"code":"sort","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"or supply an "},{"code":"OrderedDictionary","type":"codeVoice"},{"type":"text","text":" as input."}]}],"name":"Tip","type":"aside"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/qsswift\/qs\/encode(_:options:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://QsSwift/documentation/QsSwift/EncodeOptions":{"kind":"symbol","role":"symbol","url":"\/documentation\/qsswift\/encodeoptions","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EncodeOptions","kind":"identifier"}],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/EncodeOptions","title":"EncodeOptions","abstract":[{"text":"Options that configure how values are encoded into a query string.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"EncodeOptions","kind":"identifier"}]},"doc://QsSwift/documentation/QsSwift":{"type":"topic","url":"\/documentation\/qsswift","abstract":[],"identifier":"doc:\/\/QsSwift\/documentation\/QsSwift","kind":"symbol","title":"QsSwift","role":"collection"},"doc://QsSwift/documentation/QsSwift/Qs/encode(_:options:)":{"type":"topic","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/Qs\/encode(_:options:)","role":"symbol","title":"encode(_:options:)","kind":"symbol","url":"\/documentation\/qsswift\/qs\/encode(_:options:)","abstract":[{"type":"text","text":"Encode a Dictionary- or Array-like value into a query string."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?, ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7QsSwift13EncodeOptionsV","text":"EncodeOptions","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://QsSwift/documentation/QsSwift/Qs":{"kind":"symbol","type":"topic","title":"Qs","identifier":"doc:\/\/QsSwift\/documentation\/QsSwift\/Qs","url":"\/documentation\/qsswift\/qs","navigatorTitle":[{"kind":"identifier","text":"Qs"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Qs"}],"role":"symbol","abstract":[{"type":"text","text":"Top-level namespace for the qs encoder\/decoder."}]}}}