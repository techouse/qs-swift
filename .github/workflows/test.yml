name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_call:

permissions:
  contents: read
  actions: read

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    permissions:
      contents: read
      actions: write
    name: Swift tests + coverage (${{ matrix.os }}, Swift ${{ matrix.swift }})
    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-15
            swift: '6.1'
            xcode: '16.3'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Select Xcode ${{ matrix.xcode }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode }}

      - name: Show Xcode & Swift versions
        run: |
          xcodebuild -version
          swift --version

      - name: Run tests with coverage
        env:
          SKIP_EXPENSIVE_TESTS: 1
          SWIFT_DETERMINISTIC_HASHING: 1
        run: bash scripts/coverage.sh

      - name: Collect macOS crash logs
        if: ${{ failure() }}
        run: bash scripts/collect-macos-crashlogs.sh crashlogs

      - name: Upload macOS crash logs (if any)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: macOS-crashlogs-xcode-${{ matrix.xcode }}-swift-${{ matrix.swift }}
          path: crashlogs
          if-no-files-found: ignore

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage/info.lcov
          flags: swift,${{ matrix.os }},swift-${{ matrix.swift }}
          name: QsSwift-${{ matrix.os }}-swift-${{ matrix.swift }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  objc-tests:
    permissions:
      contents: read
      actions: write
    name: Objective-C E2E tests (Xcode)
    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    needs: tests
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-15
            xcode: '16.3'

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Select Xcode ${{ matrix.xcode }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode }}

      - name: Show Xcode & Swift versions
        run: |
          xcodebuild -version
          swift --version

      - name: Work around stale local SwiftPM path (symlink)
        run: |
          set -euxo pipefail
          ACTUAL="${GITHUB_WORKSPACE}"
          PARENT="$(dirname "$ACTUAL")"
          EXPECTED="${PARENT}/QsSwift"
          mkdir -p "$PARENT"
          # Idempotent: force-create/refresh the symlink
          if [ -e "$EXPECTED" ] && [ ! -L "$EXPECTED" ]; then
            echo "Warning: $EXPECTED exists and is not a symlink; removing for CI."
            rm -rf "$EXPECTED"
          fi
          if [ -L "$EXPECTED" ]; then
            TARGET="$(readlink "$EXPECTED")"
            if [ "$TARGET" != "$ACTUAL" ]; then
              echo "Refreshing symlink: $EXPECTED -> $ACTUAL (was $TARGET)"
            fi
          fi
          ln -sfn "$ACTUAL" "$EXPECTED"
          ls -lah "$PARENT" || true
          ls -lah "$EXPECTED" || true

      - name: Cache SPM (Xcode)
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            ~/Library/Developer/Xcode/DerivedData/SourcePackages
            .derivedData-objc/SourcePackages
          key: spm-${{ runner.os }}-xcode-${{ matrix.xcode }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            spm-${{ runner.os }}-xcode-${{ matrix.xcode }}-

      - name: Resolve SPM dependencies (ObjC test project)
        run: |
          set -euxo pipefail
          xcodebuild \
            -project ObjCE2ETests/ObjCE2ETests.xcodeproj \
            -scheme ObjCE2ETests \
            -derivedDataPath .derivedData-objc \
            -resolvePackageDependencies

      - name: Run Objective-C tests (macOS)
        env:
          NSUnbufferedIO: "YES"
        run: |
          set -euxo pipefail
          xcodebuild -quiet \
            -project ObjCE2ETests/ObjCE2ETests.xcodeproj \
            -scheme ObjCE2ETests \
            -configuration Debug \
            -derivedDataPath .derivedData-objc \
            -destination "platform=macOS" -sdk macosx \
            CODE_SIGNING_ALLOWED=NO \
            -enableCodeCoverage YES \
            -resultBundlePath ObjC-Tests.xcresult \
            test

      - name: Zip .xcresult and extract xccov JSON
        run: |
          set -euxo pipefail
          ls -lah
          test -d ObjC-Tests.xcresult
          /usr/bin/zip -qry ObjC-Tests.xcresult.zip ObjC-Tests.xcresult
          xcrun xccov view --report --json ObjC-Tests.xcresult > objc-coverage.json

      - name: Upload Objective-C coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: |
            ${{ github.workspace }}/ObjC-Tests.xcresult.zip
            ${{ github.workspace }}/objc-coverage.json
          flags: objc,${{ matrix.os }},xcode-${{ matrix.xcode }}
          name: QsSwift-ObjC-${{ matrix.os }}-xcode-${{ matrix.xcode }}
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: ObjC coverage summary (debug)
        run: |
          xcrun xccov view --report ObjC-Tests.xcresult || true

      - name: Upload ObjC test result bundle
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: ObjC-Tests-xcode-${{ matrix.xcode }}
          path: ObjC-Tests.xcresult
          if-no-files-found: warn

      - name: Collect macOS crash logs (ObjC job)
        if: ${{ failure() }}
        run: bash scripts/collect-macos-crashlogs.sh crashlogs-objc

      - name: Upload macOS crash logs (ObjC job, if any)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: macOS-crashlogs-objc-xcode-${{ matrix.xcode }}-${{ matrix.os }}
          path: crashlogs-objc
          if-no-files-found: ignore
