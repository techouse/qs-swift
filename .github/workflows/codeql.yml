name: CodeQL Advanced

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '36 18 * * 0'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            os: ubuntu-latest
            build-mode: none
          - language: swift
            os: macos-15
            build-mode: manual

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Select Xcode
        if: matrix.language == 'swift'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'

      - name: Show toolchain
        if: matrix.language == 'swift'
        run: swift --version

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          config-file: .github/codeql/codeql-config.yml
          # queries: security-extended,security-and-quality

      # Optional but speeds up Swift builds
      - name: Cache SwiftPM
        if: matrix.language == 'swift'
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      # Manual build (captured by CodeQL)
      - name: Build Swift package
        if: matrix.language == 'swift'
        run: |
          swift package resolve
          swift build --build-tests -c debug

      - name: Analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
